"""State Revenue

Revision ID: 745adf234bc3
Revises: 456acd975efb
Create Date: 2024-11-12 14:25:18.123456

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes


# revision identifiers, used by Alembic.
revision = '745adf234bc3'
down_revision = '456acd975efb'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Create revenue_state_total table
    op.execute("""
        CREATE TABLE revenue_state_total (
            id SERIAL PRIMARY KEY,
            revenue_entry_type_id_fk INTEGER NOT NULL,
            year INTEGER NOT NULL,
            value NUMERIC(15, 2),
            date_created TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
            date_updated TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
            CONSTRAINT fk_revenue_entry_type
                FOREIGN KEY (revenue_entry_type_id_fk)
                REFERENCES revenue_entry_type(id)
                ON DELETE RESTRICT,
            CONSTRAINT unique_revenue_state_year_entry
                UNIQUE (revenue_entry_type_id_fk, year)
        )
    """)
    
    # Create trigger for timestamp updates
    op.execute("""
        CREATE TRIGGER trigger_update_revenue_state_total_timestamp
        BEFORE UPDATE ON revenue_state_total
        FOR EACH ROW EXECUTE FUNCTION update_date_updated_column()
    """)
    
    # Create index
    op.execute("""
        CREATE INDEX idx_revenue_state_total_type ON revenue_state_total(revenue_entry_type_id_fk)
    """)
    
    # Populate revenue_state_total with data
    op.execute("""
        INSERT INTO revenue_state_total (revenue_entry_type_id_fk, year, value)
        SELECT
            ret.id, 
            df.year, 
            SUM(r.value)
        FROM 
            doe_form df
            JOIN revenue r ON r.doe_form_id_fk = df.id
            JOIN revenue_entry_type ret ON r.revenue_entry_type_id_fk = ret.id
            JOIN revenue_entry_category_type rect ON ret.revenue_entry_category_type_id_fk = rect.id
            JOIN revenue_entry_super_category_type resct ON rect.revenue_entry_super_category_type_id_fk = resct.id
        GROUP BY 
            ret.id, df.year
        ORDER BY 
            df.year ASC
    """)
    
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Drop the revenue_state_total table
    op.execute("DROP TABLE IF EXISTS revenue_state_total CASCADE")
    
    # ### end Alembic commands ###
